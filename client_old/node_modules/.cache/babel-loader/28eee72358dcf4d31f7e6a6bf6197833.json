{"ast":null,"code":"var _jsxFileName = \"/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/chatroom/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport httpClient from \"../../httpClient\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://127.0.0.1:5000/\");\n\nconst Chat = () => {\n  _s();\n\n  const [member, setMember] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [roomName, setRoomName] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  const params = useParams();\n\n  const getRoomMemberId = async id => {\n    try {\n      const res = await httpClient.get(`//localhost:5000/contract/api/get_room_members/${id}`);\n      const result = res.data.response;\n      const filtered = result.filter(x => x.user_id === params.userid); // console.log(filtered);\n\n      setMember(filtered);\n    } catch (error) {\n      console.log(\"No room is available\");\n    }\n  };\n\n  const getChatMessages = async id => {\n    try {\n      const res = await httpClient.get(`//localhost:5000/contract/api/chat/${id}`); // console.log(res.data.response);\n\n      const result = res.data.response;\n      setChat(result);\n    } catch (error) {\n      console.log(\"No message is available\");\n    }\n  }; // get room name\n\n\n  const getRoom = async id => {\n    try {\n      const res = await httpClient.get(`//localhost:5000/contract/api/get_room_by_id/${id}`); // console.log(res.data.response);\n\n      const result = res.data.response.room_name;\n      setRoomName(result);\n    } catch (error) {\n      console.log(\"No room name is available\");\n    }\n  };\n\n  useEffect(() => {\n    getRoomMemberId(params.roomid);\n    getChatMessages(params.roomid);\n    getRoom(params.roomid);\n  }, []);\n  useEffect(() => {\n    socket.on(\"chat\", payload => {\n      // console.log(payload);\n      setChat([...chat, payload]);\n    });\n    socket.on(\"connect\", function () {\n      socket.emit(\"join_room\", {\n        user: params.userid,\n        room: params.roomid\n      });\n    });\n  });\n\n  const getUserEmail = async id => {\n    try {\n      const res = await httpClient.get(`//localhost:5000/contract/api/get_user_by_id/${id}`);\n      const result = res.data.email; // console.log(result);\n\n      return result;\n    } catch (error) {\n      console.log(\"No user is available\");\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const room_id = params.roomid;\n    getRoomMemberId(room_id);\n\n    if (member && message !== \"\") {\n      const room_member_id = member[0].id;\n      const created_date = Date();\n      const created_at = created_date.substring(-1, 28);\n      const email = await getUserEmail(params.userid);\n      socket.emit(\"chat\", {\n        room_id,\n        room_member_id,\n        created_at,\n        email,\n        message\n      });\n      setMessage(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Scrollbars, {\n      style: {\n        width: 0,\n        height: 300\n      },\n      children: member.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-3\",\n          children: [\"Chat \", roomName && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: roomName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 33\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped w-75\",\n          children: chat && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: chat.map((x, index) => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-sm-3\",\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: [x.email, \" :\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: x.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [\" \", x.created_at]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 27\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false);\n            })\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"mb-3 row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"col-sm-6\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"message\",\n                type: \"text\",\n                placeholder: \"Enter your message\",\n                value: message,\n                className: \"form-control\",\n                onChange: e => setMessage(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSubmit,\n              className: \"btn btn-success col-sm-1\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/`,\n                children: \"Back to Room\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"you are not invited: \", /*#__PURE__*/_jsxDEV(Link, {\n          to: `/`,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"kPCcuefAz4nbjhn9zPd7TLMzCYE=\", false, function () {\n  return [useParams];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/chatroom/Chat.js"],"names":["React","useState","useEffect","io","Link","useNavigate","useParams","httpClient","Scrollbars","socket","Chat","member","setMember","message","setMessage","email","setEmail","roomName","setRoomName","chat","setChat","params","getRoomMemberId","id","res","get","result","data","response","filtered","filter","x","user_id","userid","error","console","log","getChatMessages","getRoom","room_name","roomid","on","payload","emit","user","room","getUserEmail","handleSubmit","e","preventDefault","room_id","room_member_id","created_date","Date","created_at","substring","width","height","length","map","index","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport httpClient from \"../../httpClient\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\n\nconst socket = io(\"http://127.0.0.1:5000/\");\n\nconst Chat = () => {\n  const [member, setMember] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [roomName, setRoomName] = useState(\"\");\n  const [chat, setChat] = useState([]);\n\n  const params = useParams();\n\n  const getRoomMemberId = async (id) => {\n    try {\n      const res = await httpClient.get(\n        `//localhost:5000/contract/api/get_room_members/${id}`\n      );\n\n      const result = res.data.response;\n      const filtered = result.filter((x) => x.user_id === params.userid);\n      // console.log(filtered);\n      setMember(filtered);\n    } catch (error) {\n      console.log(\"No room is available\");\n    }\n  };\n\n  const getChatMessages = async (id) => {\n    try {\n      const res = await httpClient.get(\n        `//localhost:5000/contract/api/chat/${id}`\n      );\n      // console.log(res.data.response);\n      const result = res.data.response;\n      setChat(result);\n    } catch (error) {\n      console.log(\"No message is available\");\n    }\n  };\n\n  // get room name\n  const getRoom = async (id) => {\n    try {\n      const res = await httpClient.get(\n        `//localhost:5000/contract/api/get_room_by_id/${id}`\n      );\n      // console.log(res.data.response);\n      const result = res.data.response.room_name;\n      setRoomName(result);\n    } catch (error) {\n      console.log(\"No room name is available\");\n    }\n  };\n\n  useEffect(() => {\n    getRoomMemberId(params.roomid);\n    getChatMessages(params.roomid);\n    getRoom(params.roomid);\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"chat\", (payload) => {\n      // console.log(payload);\n      setChat([...chat, payload]);\n    });\n\n    socket.on(\"connect\", function () {\n      socket.emit(\"join_room\", {\n        user: params.userid,\n        room: params.roomid,\n      });\n    });\n  });\n\n  const getUserEmail = async (id) => {\n    try {\n      const res = await httpClient.get(\n        `//localhost:5000/contract/api/get_user_by_id/${id}`\n      );\n\n      const result = res.data.email;\n      // console.log(result);\n      return result;\n    } catch (error) {\n      console.log(\"No user is available\");\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const room_id = params.roomid;\n\n    getRoomMemberId(room_id);\n\n    if (member && message !== \"\") {\n      const room_member_id = member[0].id;\n      const created_date = Date();\n      const created_at = created_date.substring(-1, 28);\n\n      const email = await getUserEmail(params.userid);\n      socket.emit(\"chat\", {\n        room_id,\n        room_member_id,\n        created_at,\n        email,\n        message,\n      });\n      setMessage(\"\");\n    }\n  };\n  return (\n    <div>\n      <Scrollbars style={{ width: 0, height: 300 }}>\n        {member.length !== 0 ? (\n          <>\n            <h2 className=\"mb-3\">\n              Chat {roomName && <span>{roomName}</span>}{\" \"}\n            </h2>\n            <table className=\"table table-striped w-75\">\n              {chat && (\n                <>\n                  {chat.map((x, index) => {\n                    return (\n                      <>\n                        <tr key={index}>\n                          <td className=\"col-sm-3\">\n                            <b>{x.email} :</b>\n                          </td>\n                          <td>{x.message}</td>\n                          <td> {x.created_at}</td>\n                        </tr>\n                      </>\n                    );\n                  })}\n                </>\n              )}\n            </table>\n            <form>\n              <div class=\"mb-3 row\">\n                <div class=\"col-sm-6\">\n                  <input\n                    name=\"message\"\n                    type=\"text\"\n                    placeholder=\"Enter your message\"\n                    value={message}\n                    className=\"form-control\"\n                    onChange={(e) => setMessage(e.target.value)}\n                  />\n                </div>\n\n                <button\n                  onClick={handleSubmit}\n                  className=\"btn btn-success col-sm-1\"\n                >\n                  Submit\n                </button>\n                <p>\n                  <Link to={`/`}>Back to Room</Link>\n                </p>\n              </div>\n            </form>\n          </>\n        ) : (\n          <p>\n            you are not invited: <Link to={`/`}>Back</Link>\n          </p>\n        )}\n      </Scrollbars>\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}