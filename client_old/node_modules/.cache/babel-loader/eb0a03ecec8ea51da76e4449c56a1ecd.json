{"ast":null,"code":"var _jsxFileName = \"/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:5000\");\n\nconst Chat = () => {\n  _s();\n\n  const [memberId, setMemberId] = useState(\"\");\n  const [message, setMessage] = useState([]);\n  const [chat, setChat] = useState([]);\n  const navigate = useNavigate();\n  const params = useParams();\n  useEffect(() => {\n    socket.on(\"chat\", msg => {\n      setChat([...chat, msg]);\n    });\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const userid = params.userid;\n    const roomid = params.roomid;\n    socket.emit(\"chat\", {\n      roomid,\n      userid,\n      message\n    });\n    setMessage([]); // console.log(message);\n    // console.log(params.userid);\n    // console.log(params.roomid);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Collaboration Interface\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), chat && console.log(chat), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"message\",\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"Zl1C+LStl042MzJzI52+cdWcSto=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/Chat.js"],"names":["React","useState","useEffect","io","useNavigate","useParams","socket","connect","Chat","memberId","setMemberId","message","setMessage","chat","setChat","navigate","params","on","msg","handleSubmit","e","preventDefault","userid","roomid","emit","console","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;;AAEA,MAAMC,MAAM,GAAGH,EAAE,CAACI,OAAH,CAAW,uBAAX,CAAf;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMc,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,MAAM,GAAGX,SAAS,EAAxB;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,MAAM,CAACW,EAAP,CAAU,MAAV,EAAmBC,GAAD,IAAS;AACzBJ,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUK,GAAV,CAAD,CAAP;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,MAAM,GAAGN,MAAM,CAACM,MAAtB;AACA,UAAMC,MAAM,GAAGP,MAAM,CAACO,MAAtB;AAEAjB,IAAAA,MAAM,CAACkB,IAAP,CAAY,MAAZ,EAAoB;AAAED,MAAAA,MAAF;AAAUD,MAAAA,MAAV;AAAkBX,MAAAA;AAAlB,KAApB;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV,CAN0B,CAO1B;AACA;AACA;AACD,GAVD;;AAWA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,IAAI,IAAIY,OAAO,CAACC,GAAR,CAAYb,IAAZ,CAFX,eA2CE;AAAA,6BACE;AAAA,gCAEE;AACE,UAAA,IAAI,EAAC,SADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,KAAK,EAAEF,OAHT;AAIE,UAAA,QAAQ,EAAGS,CAAD,IAAOR,UAAU,CAACQ,CAAC,CAACO,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAQE;AAAQ,UAAA,OAAO,EAAET,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA3CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0DD,CAlFD;;GAAMX,I;UAIaJ,W,EACFC,S;;;KALXG,I;AAoFN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nconst socket = io.connect(\"http://localhost:5000\");\n\nconst Chat = () => {\n  const [memberId, setMemberId] = useState(\"\");\n  const [message, setMessage] = useState([]);\n  const [chat, setChat] = useState([]);\n  const navigate = useNavigate();\n  const params = useParams();\n\n  useEffect(() => {\n    socket.on(\"chat\", (msg) => {\n      setChat([...chat, msg]);\n    });\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const userid = params.userid;\n    const roomid = params.roomid;\n\n    socket.emit(\"chat\", { roomid, userid, message });\n    setMessage([]);\n    // console.log(message);\n    // console.log(params.userid);\n    // console.log(params.roomid);\n  };\n  return (\n    <div>\n      <h4>Collaboration Interface</h4>\n      {chat && console.log(chat)}\n      {/* <table>\n        {chat && (\n          <>\n            {chat.map((x, index) => {\n              return (\n                <>\n                  <tr key={index}>\n                    <td>{x.id}</td>\n                    <td>{x.email}</td>\n                    <td>\n                      <input\n                        name=\"user\"\n                        value={memberSelection}\n                        type=\"checkbox\"\n                        onChange={(e) => {\n                          setMemberSelection(e.target.checked);\n                          const data = {\n                            id: x.id,\n                            email: x.email,\n                            value: e.target.checked,\n                          };\n                          if (data.value === true) {\n                            selectedUsers.push(data);\n                          } else {\n                            const filterdata = selectedUsers.filter(\n                              (x) => x.id !== data.id && x.email !== data.email\n                            );\n                            setSelectedUsers(filterdata);\n                          }\n                        }}\n                      />\n                    </td>\n                  </tr>\n                </>\n              );\n            })}\n          </>\n        )}\n      </table> */}\n\n      <form>\n        <div>\n          {/* <label>Enter your message:</label> */}\n          <input\n            name=\"message\"\n            type=\"text\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n          <button onClick={handleSubmit}>Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}