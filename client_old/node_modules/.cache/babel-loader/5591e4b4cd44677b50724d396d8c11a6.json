{"ast":null,"code":"var _jsxFileName = \"/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/AddMember.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport httpClient from \"../httpClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddRoom = () => {\n  _s();\n\n  const [memberName, setMemberName] = useState(\"\");\n  const [addedBy, setAddedBy] = useState(\"\");\n  const [user, setUser] = useState({});\n  const [users, setUsers] = useState([]);\n  const param = useParams();\n  console.log(param);\n  const navigate = useNavigate();\n  useEffect(() => {\n    (async () => {\n      try {\n        const resp = await httpClient.get(\"//localhost:5000/contract/api/get_user\");\n        setUser(resp.data);\n      } catch (error) {\n        console.log(\"Not authenticated\");\n      }\n    })();\n\n    (async () => {\n      try {\n        const resp = await httpClient.get(\"//localhost:5000/contract/api/get_all_users\");\n        console.log();\n        setUsers(resp.data);\n      } catch (error) {\n        console.log(\"Not authenticated\");\n      }\n    })();\n\n    if (user) {\n      setAddedBy(user.email);\n    }\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // try {\n    //   await httpClient.post(\"//localhost:5000/contract/api/addmember\", {\n    //     user_id: user.id,\n    //     room_id: param.id,\n    //     addedBy: user.email,\n    //   });\n    //   navigate(\"/roommembers\");\n    // } catch (error) {\n    //   if (error.response.status === 401) {\n    //     alert(\"Record can't be inserted!\");\n    //   }\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Room Member\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: users && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: users.map((x, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: x.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: x.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this)]\n            }, x.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Member Name :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"memberName\",\n          type: \"text\",\n          value: memberName,\n          onChange: e => setMemberName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Added By:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"addedBy\",\n          type: \"text\",\n          value: user && user.email,\n          onChange: e => setAddedBy(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddRoom, \"mFAXedEdxmmJEXCR8GSojeq7KvQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = AddRoom;\nexport default AddRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRoom\");","map":{"version":3,"sources":["/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/AddMember.js"],"names":["React","useEffect","useState","useNavigate","useParams","httpClient","AddRoom","memberName","setMemberName","addedBy","setAddedBy","user","setUser","users","setUsers","param","console","log","navigate","resp","get","data","error","email","handleSubmit","e","preventDefault","map","x","index","id","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport httpClient from \"../httpClient\";\n\nconst AddRoom = () => {\n  const [memberName, setMemberName] = useState(\"\");\n  const [addedBy, setAddedBy] = useState(\"\");\n  const [user, setUser] = useState({});\n  const [users, setUsers] = useState([]);\n\n  const param = useParams();\n  console.log(param);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const resp = await httpClient.get(\n          \"//localhost:5000/contract/api/get_user\"\n        );\n        setUser(resp.data);\n      } catch (error) {\n        console.log(\"Not authenticated\");\n      }\n    })();\n\n    (async () => {\n      try {\n        const resp = await httpClient.get(\n          \"//localhost:5000/contract/api/get_all_users\"\n        );\n        console.log()\n        setUsers(resp.data);\n      } catch (error) {\n        console.log(\"Not authenticated\");\n      }\n    })();\n    if (user) {\n      setAddedBy(user.email);\n    }\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // try {\n    //   await httpClient.post(\"//localhost:5000/contract/api/addmember\", {\n    //     user_id: user.id,\n    //     room_id: param.id,\n    //     addedBy: user.email,\n    //   });\n\n    //   navigate(\"/roommembers\");\n    // } catch (error) {\n    //   if (error.response.status === 401) {\n    //     alert(\"Record can't be inserted!\");\n    //   }\n    // }\n  };\n  return (\n    <div>\n      <h2>Add Room Member</h2>\n      <table>\n        {users && (\n          <>\n            {users.map((x, index) => {\n              return (\n                <>\n                  <tr key={x.id}>\n                    <td>{x.id}</td>\n                    <td>{x.email}</td>\n                  </tr>\n                </>\n              );\n            })}\n          </>\n        )}\n      </table>\n      <form>\n        <div>\n          <label>Member Name :</label>\n          <input\n            name=\"memberName\"\n            type=\"text\"\n            value={memberName}\n            onChange={(e) => setMemberName(e.target.value)}\n          />\n        </div>\n        <div>\n          <label>Added By:</label>\n          <input\n            name=\"addedBy\"\n            type=\"text\"\n            value={user && user.email}\n            onChange={(e) => setAddedBy(e.target.value)}\n          />\n        </div>\n        <button onClick={handleSubmit}>Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddRoom;\n"]},"metadata":{},"sourceType":"module"}