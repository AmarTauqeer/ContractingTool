{"ast":null,"code":"var _jsxFileName = \"/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:5000\");\n\nconst Chat = () => {\n  _s();\n\n  const [memberId, setMemberId] = useState(\"\");\n  const [message, setMessage] = useState([]);\n  const [chat, setChat] = useState([]);\n  const navigate = useNavigate();\n  const params = useParams();\n  useEffect(() => {// socket.on(\"chat\", (new_chat) => {\n    //   console.log(new_chat);\n    //   setChat([...chat, new_chat]);\n    // });\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const userid = params.userid;\n    const roomid = params.roomid;\n    socket.emit(\"chat\", {\n      roomid,\n      userid,\n      message\n    });\n    setMessage([]); // console.log(message);\n    // console.log(params.userid);\n    // console.log(params.roomid);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Collaboration Interface\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: chat && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: chat.map((x, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [x.userid, \" :\", x.message]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"message\",\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"Zl1C+LStl042MzJzI52+cdWcSto=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/Chat.js"],"names":["React","useState","useEffect","io","useNavigate","useParams","socket","connect","Chat","memberId","setMemberId","message","setMessage","chat","setChat","navigate","params","handleSubmit","e","preventDefault","userid","roomid","emit","map","x","index","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;;;AAEA,MAAMC,MAAM,GAAGH,EAAE,CAACI,OAAH,CAAW,uBAAX,CAAf;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMc,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,MAAM,GAAGX,SAAS,EAAxB;AAEAH,EAAAA,SAAS,CAAC,MAAM,CACd;AACA;AACA;AACA;AACD,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMe,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,MAAM,GAAGJ,MAAM,CAACI,MAAtB;AACA,UAAMC,MAAM,GAAGL,MAAM,CAACK,MAAtB;AAEAf,IAAAA,MAAM,CAACgB,IAAP,CAAY,MAAZ,EAAoB;AAAED,MAAAA,MAAF;AAAUD,MAAAA,MAAV;AAAkBT,MAAAA;AAAlB,KAApB;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV,CAN0B,CAO1B;AACA;AACA;AACD,GAVD;;AAWA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,gBACGC,IAAI,iBACH;AAAA,kBACGA,IAAI,CAACU,GAAL,CAAS,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACtB,8BACE;AAAA,mCACE;AAAA,qCACE;AAAA,uCACE;AAAA,6BACGD,CAAC,CAACJ,MADL,QACeI,CAAC,CAACb,OADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,eAASc,KAAT;AAAA;AAAA;AAAA;AAAA;AADF,2BADF;AAWD,SAZA;AADH;AAFJ;AAAA;AAAA;AAAA;AAAA,YAHF,eAuBE;AAAA,6BACE;AAAA,gCAEE;AACE,UAAA,IAAI,EAAC,SADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,KAAK,EAAEd,OAHT;AAIE,UAAA,QAAQ,EAAGO,CAAD,IAAON,UAAU,CAACM,CAAC,CAACQ,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAQE;AAAQ,UAAA,OAAO,EAAEV,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CA/DD;;GAAMT,I;UAIaJ,W,EACFC,S;;;KALXG,I;AAiEN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nconst socket = io.connect(\"http://localhost:5000\");\n\nconst Chat = () => {\n  const [memberId, setMemberId] = useState(\"\");\n  const [message, setMessage] = useState([]);\n  const [chat, setChat] = useState([]);\n  const navigate = useNavigate();\n  const params = useParams();\n\n  useEffect(() => {\n    // socket.on(\"chat\", (new_chat) => {\n    //   console.log(new_chat);\n    //   setChat([...chat, new_chat]);\n    // });\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const userid = params.userid;\n    const roomid = params.roomid;\n\n    socket.emit(\"chat\", { roomid, userid, message });\n    setMessage([]);\n    // console.log(message);\n    // console.log(params.userid);\n    // console.log(params.roomid);\n  };\n  return (\n    <div>\n      <h4>Collaboration Interface</h4>\n\n      <table>\n        {chat && (\n          <>\n            {chat.map((x, index) => {\n              return (\n                <>\n                  <tr key={index}>\n                    <td>\n                      <p>\n                        {x.userid} :{x.message}\n                      </p>\n                    </td>\n                  </tr>\n                </>\n              );\n            })}\n          </>\n        )}\n      </table>\n\n      <form>\n        <div>\n          {/* <label>Enter your message:</label> */}\n          <input\n            name=\"message\"\n            type=\"text\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n          <button onClick={handleSubmit}>Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}