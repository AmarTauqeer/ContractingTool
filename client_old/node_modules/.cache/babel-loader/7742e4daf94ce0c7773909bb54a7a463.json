{"ast":null,"code":"var _jsxFileName = \"/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/chatroom/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport httpClient from \"../../httpClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://127.0.0.1:5000/\");\n\nconst Chat = () => {\n  _s();\n\n  const [member, setMember] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [roomName, setRoomName] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  const params = useParams();\n\n  const getRoomMemberId = async id => {\n    try {\n      const res = await httpClient.get(`//localhost:5000/contract/api/get_room_members/${id}`);\n      const result = res.data.response;\n      const filtered = result.filter(x => x.user_id === params.userid); // console.log(filtered);\n\n      setMember(filtered);\n    } catch (error) {\n      console.log(\"No room is available\");\n    }\n  };\n\n  const getChatMessages = async id => {\n    try {\n      const res = await httpClient.get(`//localhost:5000/contract/api/chat/${id}`); // console.log(res.data.response);\n\n      const result = res.data.response;\n      setChat(result);\n    } catch (error) {\n      console.log(\"No message is available\");\n    }\n  }; // get room name\n\n\n  const getRoom = async id => {\n    try {\n      const res = await httpClient.get(`//localhost:5000/contract/api/get_room_by_id/${id}`); // console.log(res.data.response);\n\n      const result = res.data.response.room_name;\n      setRoomName(result);\n    } catch (error) {\n      console.log(\"No room name is available\");\n    }\n  };\n\n  useEffect(() => {\n    getRoomMemberId(params.roomid);\n    getChatMessages(params.roomid);\n    getRoom(params.roomid);\n  }, []);\n  useEffect(() => {\n    socket.on(\"chat\", payload => {\n      // console.log(payload);\n      setChat([...chat, payload]);\n    });\n    socket.on(\"connect\", function () {\n      socket.emit(\"join_room\", {\n        user: params.userid,\n        room: params.roomid\n      });\n    });\n  });\n\n  const getUserEmail = async id => {\n    try {\n      const res = await httpClient.get(`//localhost:5000/contract/api/get_user_by_id/${id}`);\n      const result = res.data.email; // console.log(result);\n\n      return result;\n    } catch (error) {\n      console.log(\"No user is available\");\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const room_id = params.roomid;\n    getRoomMemberId(room_id);\n\n    if (member && message !== \"\") {\n      const room_member_id = member[0].id;\n      const created_at = Date;\n      const email = await getUserEmail(params.userid);\n      socket.emit(\"chat\", {\n        room_id,\n        room_member_id,\n        created_at,\n        email,\n        message\n      });\n      setMessage(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: member.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-3\",\n        children: [\"Chat \", roomName && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: roomName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 50\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped w-75\",\n        children: chat && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: chat.map((x, index) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: [x.email, \" :\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: x.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"\\xA0\\xA0\\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", x.created_at]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 23\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"message\",\n            type: \"text\",\n            placeholder: \"Enter your message\",\n            value: message,\n            onChange: e => setMessage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"you are not invited: \", /*#__PURE__*/_jsxDEV(Link, {\n        to: `/`,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"kPCcuefAz4nbjhn9zPd7TLMzCYE=\", false, function () {\n  return [useParams];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/chatroom/Chat.js"],"names":["React","useState","useEffect","io","Link","useNavigate","useParams","httpClient","socket","Chat","member","setMember","message","setMessage","email","setEmail","roomName","setRoomName","chat","setChat","params","getRoomMemberId","id","res","get","result","data","response","filtered","filter","x","user_id","userid","error","console","log","getChatMessages","getRoom","room_name","roomid","on","payload","emit","user","room","getUserEmail","handleSubmit","e","preventDefault","room_id","room_member_id","created_at","Date","length","map","index","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport httpClient from \"../../httpClient\";\n\nconst socket = io(\"http://127.0.0.1:5000/\");\n\nconst Chat = () => {\n  const [member, setMember] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [roomName, setRoomName] = useState(\"\");\n  const [chat, setChat] = useState([]);\n\n  const params = useParams();\n\n  const getRoomMemberId = async (id) => {\n    try {\n      const res = await httpClient.get(\n        `//localhost:5000/contract/api/get_room_members/${id}`\n      );\n\n      const result = res.data.response;\n      const filtered = result.filter((x) => x.user_id === params.userid);\n      // console.log(filtered);\n      setMember(filtered);\n    } catch (error) {\n      console.log(\"No room is available\");\n    }\n  };\n\n  const getChatMessages = async (id) => {\n    try {\n      const res = await httpClient.get(\n        `//localhost:5000/contract/api/chat/${id}`\n      );\n      // console.log(res.data.response);\n      const result = res.data.response;\n      setChat(result);\n    } catch (error) {\n      console.log(\"No message is available\");\n    }\n  };\n\n  // get room name\n  const getRoom = async (id) => {\n    try {\n      const res = await httpClient.get(\n        `//localhost:5000/contract/api/get_room_by_id/${id}`\n      );\n      // console.log(res.data.response);\n      const result = res.data.response.room_name;\n      setRoomName(result);\n    } catch (error) {\n      console.log(\"No room name is available\");\n    }\n  };\n\n  useEffect(() => {\n    getRoomMemberId(params.roomid);\n    getChatMessages(params.roomid);\n    getRoom(params.roomid);\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"chat\", (payload) => {\n      // console.log(payload);\n      setChat([...chat, payload]);\n    });\n\n    socket.on(\"connect\", function () {\n      socket.emit(\"join_room\", {\n        user: params.userid,\n        room: params.roomid,\n      });\n    });\n  });\n\n  const getUserEmail = async (id) => {\n    try {\n      const res = await httpClient.get(\n        `//localhost:5000/contract/api/get_user_by_id/${id}`\n      );\n\n      const result = res.data.email;\n      // console.log(result);\n      return result;\n    } catch (error) {\n      console.log(\"No user is available\");\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const room_id = params.roomid;\n\n    getRoomMemberId(room_id);\n\n    if (member && message !== \"\") {\n      const room_member_id = member[0].id;\n      const created_at = Date;\n      const email = await getUserEmail(params.userid);\n      socket.emit(\"chat\", {\n        room_id,\n        room_member_id,\n        created_at,\n        email,\n        message,\n      });\n      setMessage(\"\");\n    }\n  };\n  return (\n    <div>\n      {member.length !== 0 ? (\n        <>\n          <h2 className=\"mb-3\">Chat {roomName && <span>{roomName}</span>} </h2>\n          <table className=\"table table-striped w-75\">\n            {chat && (\n              <>\n                {chat.map((x, index) => {\n                  return (\n                    <>\n                      <tr key={index}>\n                        <td className=\"\">\n                          <h4>\n                            <b>{x.email} :</b>\n                          </h4>\n                        </td>\n                        <td>\n                          <p>{x.message}</p>\n                        </td>\n                        <td>&nbsp;&nbsp;&nbsp;</td>\n                        <td> {x.created_at}</td>\n                      </tr>\n                    </>\n                  );\n                })}\n              </>\n            )}\n          </table>\n          <form>\n            <div>\n              <input\n                name=\"message\"\n                type=\"text\"\n                placeholder=\"Enter your message\"\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n              />\n              <button onClick={handleSubmit}>Submit</button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          you are not invited: <Link to={`/`}>Back</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}