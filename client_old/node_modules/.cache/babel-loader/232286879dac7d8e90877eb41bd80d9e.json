{"ast":null,"code":"var _jsxFileName = \"/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport httpClient from \"../httpClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:5000\");\n\nconst Chat = () => {\n  _s();\n\n  const [member, setMember] = useState([]);\n  const [message, setMessage] = useState([]);\n  const [chat, setChat] = useState([]);\n  const params = useParams();\n  useEffect(() => {\n    socket.on(\"chat\", payload => {\n      console.log(payload);\n      setChat([...chat, payload]);\n    });\n\n    (async () => {\n      try {\n        const res = await httpClient.get(`//localhost:5000/contract/api/get_room_members/${params.roomid}`); // console.log(res.data.response);\n\n        const result = res.data.response;\n        const filtered = result.filter(x => x.user_id === params.userid);\n        setMember(filtered);\n      } catch (error) {\n        console.log(\"No room is available\");\n      }\n    })();\n\n    (async () => {\n      try {\n        const res = await httpClient.get(`//localhost:5000/contract/api/chat`); // console.log(res.data.response);\n\n        const result = res.data.response;\n        const filtered = result.filter(x => x.user_id === params.userid);\n        setMember(filtered);\n      } catch (error) {\n        console.log(\"No room is available\");\n      }\n    })();\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const userid = params.userid;\n    const roomid = params.roomid;\n    const roommemberid = member[0].id;\n    console.log(chat);\n    socket.emit(\"chat\", {\n      roomid,\n      roommemberid,\n      userid,\n      message\n    });\n    setMessage([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Collaboration Interface\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: chat && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: chat.map((x, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [x.room_member_id, \" :\", x.message]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"message\",\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"8+R/99wHeaearSOmelVcZBr0cK0=\", false, function () {\n  return [useParams];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/Chat.js"],"names":["React","useState","useEffect","io","useNavigate","useParams","httpClient","socket","connect","Chat","member","setMember","message","setMessage","chat","setChat","params","on","payload","console","log","res","get","roomid","result","data","response","filtered","filter","x","user_id","userid","error","handleSubmit","e","preventDefault","roommemberid","id","emit","map","index","room_member_id","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport httpClient from \"../httpClient\";\n\nconst socket = io.connect(\"http://localhost:5000\");\n\nconst Chat = () => {\n  const [member, setMember] = useState([]);\n  const [message, setMessage] = useState([]);\n  const [chat, setChat] = useState([]);\n\n  const params = useParams();\n\n  useEffect(() => {\n    socket.on(\"chat\", (payload) => {\n      console.log(payload);\n      setChat([...chat, payload]);\n    });\n    (async () => {\n      try {\n        const res = await httpClient.get(\n          `//localhost:5000/contract/api/get_room_members/${params.roomid}`\n        );\n        // console.log(res.data.response);\n        const result = res.data.response;\n        const filtered = result.filter((x) => x.user_id === params.userid);\n        setMember(filtered);\n      } catch (error) {\n        console.log(\"No room is available\");\n      }\n    })();\n    (async () => {\n      try {\n        const res = await httpClient.get(\n          `//localhost:5000/contract/api/chat`\n        );\n        // console.log(res.data.response);\n        const result = res.data.response;\n        const filtered = result.filter((x) => x.user_id === params.userid);\n        setMember(filtered);\n      } catch (error) {\n        console.log(\"No room is available\");\n      }\n    })();\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const userid = params.userid;\n    const roomid = params.roomid;\n    const roommemberid = member[0].id;\n\n    console.log(chat);\n\n    socket.emit(\"chat\", { roomid, roommemberid, userid, message });\n    setMessage([]);\n  };\n  return (\n    <div>\n      <h4>Collaboration Interface</h4>\n\n      <table>\n        {chat && (\n          <>\n            {chat.map((x, index) => {\n              return (\n                <>\n                  <tr key={index}>\n                    <td>\n                      <p>\n                        {x.room_member_id} :{x.message}\n                      </p>\n                    </td>\n                  </tr>\n                </>\n              );\n            })}\n          </>\n        )}\n      </table>\n\n      <form>\n        <div>\n          {/* <label>Enter your message:</label> */}\n          <input\n            name=\"message\"\n            type=\"text\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n          <button onClick={handleSubmit}>Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}