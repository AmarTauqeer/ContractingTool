{"ast":null,"code":"var _jsxFileName = \"/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/AddMember.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport httpClient from \"../httpClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddRoom = () => {\n  _s();\n\n  const [memberName, setMemberName] = useState(\"\");\n  const [addedBy, setAddedBy] = useState(\"\");\n  const [user, setUser] = useState({});\n  const [users, setUsers] = useState([]);\n  const param = useParams(); //   console.log(param.id);\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    (async () => {\n      try {\n        const resp = await httpClient.get(\"//localhost:5000/contract/api/get_user\");\n        setUser(resp.data);\n      } catch (error) {\n        console.log(\"Not authenticated\");\n      }\n    })(async () => {\n      try {\n        const resp = await httpClient.get(\"//localhost:5000/contract/api/get_all_user\");\n        setUsers(resp.data);\n      } catch (error) {\n        console.log(\"Some issues to get the records\");\n      }\n    })();\n\n    if (user) {\n      setAddedBy(user.email);\n    }\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      await httpClient.post(\"//localhost:5000/contract/api/addmember\", {\n        user_id: user.id,\n        room_id: param.id,\n        memberName,\n        addedBy: user.email\n      });\n      navigate(\"/roommembers/\" + param.id);\n    } catch (error) {\n      if (error.response.status === 401) {\n        alert(\"Record can't be inserted!\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Room Member\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [users.length == 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No member is available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 31\n      }, this), roomMember && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: roomMember.map((x, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: x.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: x.member_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: e => deleteMember(x.id),\n                  children: \"X\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this)]\n            }, x.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Member Name :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"memberName\",\n          type: \"text\",\n          value: memberName,\n          onChange: e => setMemberName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Added By:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"addedBy\",\n          type: \"text\",\n          value: user && user.email,\n          onChange: e => setAddedBy(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddRoom, \"mFAXedEdxmmJEXCR8GSojeq7KvQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = AddRoom;\nexport default AddRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRoom\");","map":{"version":3,"sources":["/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/AddMember.js"],"names":["React","useEffect","useState","useNavigate","useParams","httpClient","AddRoom","memberName","setMemberName","addedBy","setAddedBy","user","setUser","users","setUsers","param","navigate","resp","get","data","error","console","log","email","handleSubmit","e","preventDefault","post","user_id","id","room_id","response","status","alert","length","roomMember","map","x","index","member_name","deleteMember","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport httpClient from \"../httpClient\";\n\nconst AddRoom = () => {\n  const [memberName, setMemberName] = useState(\"\");\n  const [addedBy, setAddedBy] = useState(\"\");\n  const [user, setUser] = useState({});\n  const [users, setUsers] = useState([]);\n\n  const param = useParams();\n  //   console.log(param.id);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const resp = await httpClient.get(\n          \"//localhost:5000/contract/api/get_user\"\n        );\n        setUser(resp.data);\n      } catch (error) {\n        console.log(\"Not authenticated\");\n      }\n    })(async () => {\n      try {\n        const resp = await httpClient.get(\n          \"//localhost:5000/contract/api/get_all_user\"\n        );\n        setUsers(resp.data);\n      } catch (error) {\n        console.log(\"Some issues to get the records\");\n      }\n    })();\n    if (user) {\n      setAddedBy(user.email);\n    }\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await httpClient.post(\"//localhost:5000/contract/api/addmember\", {\n        user_id: user.id,\n        room_id: param.id,\n        memberName,\n        addedBy: user.email,\n      });\n\n      navigate(\"/roommembers/\" + param.id);\n    } catch (error) {\n      if (error.response.status === 401) {\n        alert(\"Record can't be inserted!\");\n      }\n    }\n  };\n  return (\n    <div>\n      <h2>Add Room Member</h2>\n      <table>\n        {users.length == 0 && <p>No member is available</p>}\n        {roomMember && (\n          <>\n            {roomMember.map((x, index) => {\n              return (\n                <>\n                  <tr key={x.id}>\n                    <td>{x.id}</td>\n                    <td>{x.member_name}</td>\n                    <td>\n                      <button onClick={(e) => deleteMember(x.id)}>X</button>\n                    </td>\n                  </tr>\n                </>\n              );\n            })}\n          </>\n        )}\n      </table>\n      <form>\n        <div>\n          <label>Member Name :</label>\n          <input\n            name=\"memberName\"\n            type=\"text\"\n            value={memberName}\n            onChange={(e) => setMemberName(e.target.value)}\n          />\n        </div>\n        <div>\n          <label>Added By:</label>\n          <input\n            name=\"addedBy\"\n            type=\"text\"\n            value={user && user.email}\n            onChange={(e) => setAddedBy(e.target.value)}\n          />\n        </div>\n        <button onClick={handleSubmit}>Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddRoom;\n"]},"metadata":{},"sourceType":"module"}