{"ast":null,"code":"var _jsxFileName = \"/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/AddRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport httpClient from \"../httpClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddRoom = () => {\n  _s();\n\n  const [roomName, setRoomName] = useState(\"\");\n  const [createdBy, setCreatedBy] = useState(\"\");\n  const [user, setUser] = useState({});\n  const [users, setUsers] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [memberSelection, setMemberSelection] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    (async () => {\n      try {\n        const resp = await httpClient.get(\"//localhost:5000/contract/api/get_user\");\n        setUser(resp.data);\n      } catch (error) {\n        console.log(\"Not authenticated\");\n      }\n    })();\n\n    (async () => {\n      try {\n        const resp = await httpClient.get(\"//localhost:5000/contract/api/get_all_users\"); // console.log(resp.data.response);\n\n        setUsers(resp.data.response);\n      } catch (error) {\n        console.log(\"Not authenticated\");\n      }\n    })();\n\n    if (user) {\n      setCreatedBy(user.email);\n    }\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let data = [];\n\n    for (let index = 0; index < selectedUsers.length; index++) {\n      const element = selectedUsers[index];\n      let newData = {\n        user_id: element.id,\n        room_name: roomName,\n        added_by: user.id\n      };\n      data.push(newData);\n    }\n\n    try {\n      await httpClient.post(\"//localhost:5000/contract/api/addroom\", {\n        roomName,\n        createdBy: user.email\n      });\n      navigate(\"/\");\n    } catch (error) {\n      if (error.response.status === 401) {\n        alert(\"Record can't be inserted!\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Room Name :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"roomName\",\n          type: \"text\",\n          value: roomName,\n          onChange: e => setRoomName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Created By:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"createdBy\",\n          type: \"text\",\n          value: user && user.email,\n          onChange: e => setCreatedBy(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Room Member\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: users && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: users.map((x, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: x.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: x.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"user\",\n                  value: memberSelection,\n                  type: \"checkbox\",\n                  onChange: e => {\n                    setMemberSelection(e.target.checked);\n                    const data = {\n                      id: x.id,\n                      email: x.email,\n                      value: e.target.checked\n                    };\n\n                    if (data.value === true) {\n                      selectedUsers.push(data);\n                    } else {\n                      const filterdata = selectedUsers.filter(x => x.id !== data.id && x.email !== data.email);\n                      setSelectedUsers(filterdata);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddRoom, \"VYZEgQpI7VczF+vSzV05FIHb/i0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AddRoom;\nexport default AddRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRoom\");","map":{"version":3,"sources":["/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/AddRoom.js"],"names":["React","useEffect","useState","useNavigate","httpClient","AddRoom","roomName","setRoomName","createdBy","setCreatedBy","user","setUser","users","setUsers","selectedUsers","setSelectedUsers","memberSelection","setMemberSelection","navigate","resp","get","data","error","console","log","response","email","handleSubmit","e","preventDefault","index","length","element","newData","user_id","id","room_name","added_by","push","post","status","alert","target","value","map","x","checked","filterdata","filter"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport httpClient from \"../httpClient\";\n\nconst AddRoom = () => {\n  const [roomName, setRoomName] = useState(\"\");\n  const [createdBy, setCreatedBy] = useState(\"\");\n  const [user, setUser] = useState({});\n  const [users, setUsers] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [memberSelection, setMemberSelection] = useState(false);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const resp = await httpClient.get(\n          \"//localhost:5000/contract/api/get_user\"\n        );\n        setUser(resp.data);\n      } catch (error) {\n        console.log(\"Not authenticated\");\n      }\n    })();\n\n    (async () => {\n      try {\n        const resp = await httpClient.get(\n          \"//localhost:5000/contract/api/get_all_users\"\n        );\n        // console.log(resp.data.response);\n        setUsers(resp.data.response);\n      } catch (error) {\n        console.log(\"Not authenticated\");\n      }\n    })();\n    if (user) {\n      setCreatedBy(user.email);\n    }\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    let data = [];\n\n    for (let index = 0; index < selectedUsers.length; index++) {\n      const element = selectedUsers[index];\n      let newData = {\n        user_id: element.id,\n        room_name: roomName,\n        \n        added_by: user.id,\n      };\n      data.push(newData);\n    }\n\n    try {\n      await httpClient.post(\"//localhost:5000/contract/api/addroom\", {\n        roomName,\n        createdBy: user.email,\n      });\n\n      navigate(\"/\");\n    } catch (error) {\n      if (error.response.status === 401) {\n        alert(\"Record can't be inserted!\");\n      }\n    }\n  };\n  return (\n    <div>\n      <h2>Add Room</h2>\n      <form>\n        <div>\n          <label>Room Name :</label>\n          <input\n            name=\"roomName\"\n            type=\"text\"\n            value={roomName}\n            onChange={(e) => setRoomName(e.target.value)}\n          />\n        </div>\n        <div>\n          <label>Created By:</label>\n          <input\n            name=\"createdBy\"\n            type=\"text\"\n            value={user && user.email}\n            onChange={(e) => setCreatedBy(e.target.value)}\n          />\n        </div>\n        <button onClick={handleSubmit}>Submit</button>\n      </form>\n\n      <h2>Add Room Member</h2>\n      <table>\n        {users && (\n          <>\n            {users.map((x, index) => {\n              return (\n                <>\n                  <tr key={index}>\n                    <td>{x.id}</td>\n                    <td>{x.email}</td>\n                    <td>\n                      <input\n                        name=\"user\"\n                        value={memberSelection}\n                        type=\"checkbox\"\n                        onChange={(e) => {\n                          setMemberSelection(e.target.checked);\n                          const data = {\n                            id: x.id,\n                            email: x.email,\n                            value: e.target.checked,\n                          };\n                          if (data.value === true) {\n                            selectedUsers.push(data);\n                          } else {\n                            const filterdata = selectedUsers.filter(\n                              (x) => x.id !== data.id && x.email !== data.email\n                            );\n                            setSelectedUsers(filterdata);\n                          }\n                        }}\n                      />\n                    </td>\n                  </tr>\n                </>\n              );\n            })}\n          </>\n        )}\n      </table>\n      <button onClick={handleSubmit}>Submit</button>\n    </div>\n  );\n};\n\nexport default AddRoom;\n"]},"metadata":{},"sourceType":"module"}