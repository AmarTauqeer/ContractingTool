{"ast":null,"code":"var _jsxFileName = \"/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/AddMember.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport httpClient from \"../httpClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddRoom = () => {\n  _s();\n\n  const [memberName, setMemberName] = useState(\"\");\n  const [memberSelection, setMemberSelection] = useState(false);\n  const [addedBy, setAddedBy] = useState(\"\");\n  const [user, setUser] = useState({});\n  const [users, setUsers] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const param = useParams(); // console.log(memberSelection);\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    (async () => {\n      try {\n        const resp = await httpClient.get(\"//localhost:5000/contract/api/get_user\");\n        setUser(resp.data);\n      } catch (error) {\n        console.log(\"Not authenticated\");\n      }\n    })();\n\n    (async () => {\n      try {\n        const resp = await httpClient.get(\"//localhost:5000/contract/api/get_all_users\"); // console.log(resp.data.response);\n\n        setUsers(resp.data.response);\n      } catch (error) {\n        console.log(\"Not authenticated\");\n      }\n    })();\n\n    if (user) {\n      setAddedBy(user.email);\n    }\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(selectedUsers);\n    let data = [];\n\n    for (let index = 0; index < selectedUsers.length; index++) {\n      const element = selectedUsers[index];\n      let data = {\n        user_id: element.user_id,\n        room_id: element.room_id,\n        user_id: element.user_id,\n        user_id: element.user_id\n      };\n    }\n\n    try {\n      await httpClient.post(\"//localhost:5000/contract/api/addmember\", {\n        user_id: user.id,\n        room_id: param.id,\n        addedBy: user.email\n      });\n      navigate(\"/roommembers\");\n    } catch (error) {\n      if (error.response.status === 401) {\n        alert(\"Record can't be inserted!\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Room Member\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: users && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: users.map((x, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: x.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: x.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"user\",\n                  value: memberSelection,\n                  type: \"checkbox\",\n                  onChange: e => {\n                    setMemberSelection(e.target.checked);\n                    const data = {\n                      id: x.id,\n                      email: x.email,\n                      value: e.target.checked\n                    };\n\n                    if (data.value === true) {\n                      selectedUsers.push(data);\n                    } else {\n                      const filterdata = selectedUsers.filter(x => x.id !== data.id && x.email !== data.email);\n                      setSelectedUsers(filterdata);\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, this)]\n            }, x.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddRoom, \"Zo5kDRiAoBjCbpLgfkwmVXpAqHY=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = AddRoom;\nexport default AddRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRoom\");","map":{"version":3,"sources":["/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/AddMember.js"],"names":["React","useEffect","useState","useNavigate","useParams","httpClient","AddRoom","memberName","setMemberName","memberSelection","setMemberSelection","addedBy","setAddedBy","user","setUser","users","setUsers","selectedUsers","setSelectedUsers","param","navigate","resp","get","data","error","console","log","response","email","handleSubmit","e","preventDefault","index","length","element","user_id","room_id","post","id","status","alert","map","x","target","checked","value","push","filterdata","filter"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport httpClient from \"../httpClient\";\n\nconst AddRoom = () => {\n  const [memberName, setMemberName] = useState(\"\");\n  const [memberSelection, setMemberSelection] = useState(false);\n  const [addedBy, setAddedBy] = useState(\"\");\n  const [user, setUser] = useState({});\n  const [users, setUsers] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n\n  const param = useParams();\n  // console.log(memberSelection);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const resp = await httpClient.get(\n          \"//localhost:5000/contract/api/get_user\"\n        );\n        setUser(resp.data);\n      } catch (error) {\n        console.log(\"Not authenticated\");\n      }\n    })();\n\n    (async () => {\n      try {\n        const resp = await httpClient.get(\n          \"//localhost:5000/contract/api/get_all_users\"\n        );\n        // console.log(resp.data.response);\n        setUsers(resp.data.response);\n      } catch (error) {\n        console.log(\"Not authenticated\");\n      }\n    })();\n    if (user) {\n      setAddedBy(user.email);\n    }\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(selectedUsers);\n    \n    let data=[]\n\n    for (let index = 0; index < selectedUsers.length; index++) {\n      const element = selectedUsers[index];\n      let data={\n        user_id:element.user_id,\n        room_id:element.room_id,\n        user_id:element.user_id,\n        user_id:element.user_id,\n      }\n    }\n\n    try {\n      await httpClient.post(\"//localhost:5000/contract/api/addmember\", {\n        user_id: user.id,\n        room_id: param.id,\n        addedBy: user.email,\n      });\n\n      navigate(\"/roommembers\");\n    } catch (error) {\n      if (error.response.status === 401) {\n        alert(\"Record can't be inserted!\");\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h2>Add Room Member</h2>\n      <table>\n        {users && (\n          <>\n            {users.map((x, index) => {\n              return (\n                <>\n                  <tr key={x.id}>\n                    <td>{x.id}</td>\n                    <td>{x.email}</td>\n                    <td>\n                      <input\n                        name=\"user\"\n                        value={memberSelection}\n                        type=\"checkbox\"\n                        onChange={(e) => {\n                          setMemberSelection(e.target.checked);\n                          const data = {\n                            id: x.id,\n                            email: x.email,\n                            value: e.target.checked,\n                          };\n                          if (data.value === true) {\n                            selectedUsers.push(data);\n                          } else {\n                            const filterdata = selectedUsers.filter(\n                              (x) => x.id !== data.id && x.email !== data.email\n                            );\n                            setSelectedUsers(filterdata);\n                          }\n                        }}\n                      />\n                    </td>\n                  </tr>\n                </>\n              );\n            })}\n          </>\n        )}\n      </table>\n      <form>\n        {/* <div>\n          <label>Member Name :</label>\n          <input\n            name=\"memberName\"\n            type=\"text\"\n            value={memberName}\n            onChange={(e) => setMemberName(e.target.value)}\n          />\n        </div>\n        <div>\n          <label>Added By:</label>\n          <input\n            name=\"addedBy\"\n            type=\"text\"\n            value={user && user.email}\n            onChange={(e) => setAddedBy(e.target.value)}\n          />\n        </div> */}\n        <button onClick={handleSubmit}>Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddRoom;\n"]},"metadata":{},"sourceType":"module"}