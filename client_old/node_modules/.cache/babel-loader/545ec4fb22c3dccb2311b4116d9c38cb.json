{"ast":null,"code":"var _jsxFileName = \"/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/authentication/Register.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport httpClient from \"../../httpClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [stateErrors, setStateErrors] = useState({\n    emailError: \"\",\n    passwordError: \"\"\n  }); // validation\n\n  const validate = () => {\n    let emailError = \"\";\n    let passwordError = \"\";\n\n    if (email === \"\") {\n      emailError = \"Email is required.\";\n    }\n\n    if (password === \"\") {\n      passwordError = \"Password is required.\";\n    }\n\n    if (password && password.length < 4) {\n      passwordError = \"Password length should be greator or equal 4.\";\n    }\n\n    if (!email.includes(\"@\")) {\n      emailError = \"Invalid email\";\n    }\n\n    if (emailError || passwordError) {\n      setStateErrors({\n        emailError,\n        passwordError\n      });\n      return false;\n    }\n\n    return true;\n  };\n\n  const registerUser = async () => {\n    const isValid = validate();\n\n    if (isValid) {\n      setStateErrors({\n        emailError: \"\",\n        passwordError: \"\"\n      });\n\n      try {\n        const resp = await httpClient.post(\"//localhost:5000/contract/api/register\", {\n          email,\n          password\n        });\n        window.location.href = \"/\";\n      } catch (error) {\n        if (error.response.status === 401) {\n          alert(\"Invalid credentials\");\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          id: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          id: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => registerUser(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"0qvpoMMhPHj+HsDyVgLvdJTmCy0=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/authentication/Register.js"],"names":["axios","React","useState","httpClient","Register","email","setEmail","password","setPassword","stateErrors","setStateErrors","emailError","passwordError","validate","length","includes","registerUser","isValid","resp","post","window","location","href","error","response","status","alert","e","target","value"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport httpClient from \"../../httpClient\";\nconst Register = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [stateErrors, setStateErrors] = useState({\n    emailError: \"\",\n    passwordError: \"\",\n  });\n\n  // validation\n  const validate = () => {\n    let emailError = \"\";\n    let passwordError = \"\";\n\n    if (email === \"\") {\n      emailError = \"Email is required.\";\n    }\n\n    if (password === \"\") {\n      passwordError = \"Password is required.\";\n    }\n\n    if (password && password.length < 4) {\n      passwordError = \"Password length should be greator or equal 4.\";\n    }\n\n    if (!email.includes(\"@\")) {\n      emailError = \"Invalid email\";\n    }\n\n    if (emailError || passwordError) {\n      setStateErrors({\n        emailError,\n        passwordError,\n      });\n      return false;\n    }\n    return true;\n  };\n\n  const registerUser = async () => {\n    const isValid = validate();\n\n    if (isValid) {\n      setStateErrors({ emailError: \"\", passwordError: \"\" });\n\n      try {\n        const resp = await httpClient.post(\n          \"//localhost:5000/contract/api/register\",\n          {\n            email,\n            password,\n          }\n        );\n\n        window.location.href = \"/\";\n      } catch (error) {\n        if (error.response.status === 401) {\n          alert(\"Invalid credentials\");\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"container-md\">\n      <h1>Create an account</h1>\n      <form>\n        <div>\n          <label>Email: </label>\n          <input\n            type=\"text\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            id=\"\"\n          />\n        </div>\n        <div>\n          <label>Password: </label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            id=\"\"\n          />\n        </div>\n        <button type=\"button\" onClick={() => registerUser()}>\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}