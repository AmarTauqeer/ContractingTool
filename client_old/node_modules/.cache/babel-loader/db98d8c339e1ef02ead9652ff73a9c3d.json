{"ast":null,"code":"var _jsxFileName = \"/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/RoomMembers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport httpClient from \"../httpClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Room = () => {\n  _s();\n\n  const [roomMember, setRoomMember] = useState([]);\n  const param = useParams();\n  console.log(param);\n  const navigate = useNavigate();\n  useEffect(() => {\n    (async () => {\n      try {\n        const resp = await httpClient.get(`//localhost:5000/contract/api/get_room_members/${param.id}`);\n        setRoomMember(resp.data.response);\n      } catch (error) {\n        console.log(\"No room member available\");\n      }\n    })();\n  }, []);\n\n  const deleteMember = async memberid => {\n    if (memberid) {\n      try {\n        const resp = await httpClient.get(`//localhost:5000/contract/api/delete_room_member/${memberid}`);\n        window.location.reload(false);\n      } catch (error) {\n        console.log(\"No room member available\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"List of Room Member\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), roomMember.length == 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No member is available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 36\n      }, this), roomMember && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: roomMember.map((x, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: x.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: x.user_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: e => deleteMember(x.id),\n                  children: \"X\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this)]\n            }, x.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/addmember/${param.id}`,\n      children: \"Add Member\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/`,\n      children: \"Back to Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Room, \"14fQSyT+TUNGkCF0zIrnBo/cncY=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Room;\nexport default Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/RoomMembers.js"],"names":["React","useState","useEffect","Link","useNavigate","useParams","httpClient","Room","roomMember","setRoomMember","param","console","log","navigate","resp","get","id","data","response","error","deleteMember","memberid","window","location","reload","length","map","x","index","user_id","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport httpClient from \"../httpClient\";\nconst Room = () => {\n  const [roomMember, setRoomMember] = useState([]);\n\n  const param = useParams();\n  console.log(param);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const resp = await httpClient.get(\n          `//localhost:5000/contract/api/get_room_members/${param.id}`\n        );\n        setRoomMember(resp.data.response);\n      } catch (error) {\n        console.log(\"No room member available\");\n      }\n    })();\n  }, []);\n\n  const deleteMember = async (memberid) => {\n    if (memberid) {\n      try {\n        const resp = await httpClient.get(\n          `//localhost:5000/contract/api/delete_room_member/${memberid}`\n        );\n        window.location.reload(false);\n      } catch (error) {\n        console.log(\"No room member available\");\n      }\n    }\n  };\n\n  return (\n    <>\n      <h2>List of Room Member</h2> <br />\n      <table>\n        <tr>\n          <td>\n            <b>ID</b>\n          </td>\n          <td>\n            <b>Name</b>\n          </td>\n          <td>\n            <b>Actions</b>\n          </td>\n        </tr>\n        {roomMember.length == 0 && <p>No member is available</p>}\n        {roomMember && (\n          <>\n            {roomMember.map((x, index) => {\n              return (\n                <>\n                  <tr key={x.id}>\n                    <td>{x.id}</td>\n                    <td>{x.user_id}</td>\n                    <td>\n                      <button onClick={(e) => deleteMember(x.id)}>X</button>\n                    </td>\n                  </tr>\n                </>\n              );\n            })}\n          </>\n        )}\n      </table>\n      <Link to={`/addmember/${param.id}`}>Add Member</Link>\n      <br />\n      <Link to={`/`}>Back to Room</Link>\n    </>\n  );\n};\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}