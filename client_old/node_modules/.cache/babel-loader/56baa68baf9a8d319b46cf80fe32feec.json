{"ast":null,"code":"var _jsxFileName = \"/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/RoomMembers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport httpClient from \"../httpClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Room = () => {\n  _s();\n\n  const [roomMember, setRoomMember] = useState([]);\n  const [roomId, setRoomId] = useState(\"\");\n  const roomid = useParams();\n  useEffect(() => {\n    (async () => {\n      try {\n        const resp = await httpClient.get(\"//localhost:5000/contract/api/get_member\");\n        setRoomMember(resp.data);\n        setRoomId(roomid);\n      } catch (error) {\n        console.log(\"No room member available\");\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"List of Room Member\", /*#__PURE__*/_jsxDEV(Link, {\n      to: `/addmember/${roomid}`,\n      children: \"Add Member\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Room, \"PC161bCtI/G0HlXZJoeO7NxFSys=\", false, function () {\n  return [useParams];\n});\n\n_c = Room;\nexport default Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/RoomMembers.js"],"names":["React","useState","useEffect","Link","useParams","httpClient","Room","roomMember","setRoomMember","roomId","setRoomId","roomid","resp","get","data","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,OAAOC,UAAP,MAAuB,eAAvB;;;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMU,MAAM,GAAGP,SAAS,EAAxB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,UAAI;AACF,cAAMU,IAAI,GAAG,MAAMP,UAAU,CAACQ,GAAX,CACjB,0CADiB,CAAnB;AAGAL,QAAAA,aAAa,CAACI,IAAI,CAACE,IAAN,CAAb;AACAJ,QAAAA,SAAS,CAACC,MAAD,CAAT;AACD,OAND,CAME,OAAOI,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD;AACF,KAVD;AAWD,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACE;AAAA,mDAEE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,cAAaN,MAAO,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CA1BD;;GAAML,I;UAIWF,S;;;KAJXE,I;AA4BN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport httpClient from \"../httpClient\";\nconst Room = () => {\n  const [roomMember, setRoomMember] = useState([]);\n  const [roomId, setRoomId] = useState(\"\");\n\n  const roomid = useParams();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const resp = await httpClient.get(\n          \"//localhost:5000/contract/api/get_member\"\n        );\n        setRoomMember(resp.data);\n        setRoomId(roomid);\n      } catch (error) {\n        console.log(\"No room member available\");\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      List of Room Member\n      <Link to={`/addmember/${roomid}`}>Add Member</Link>\n    </>\n  );\n};\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}