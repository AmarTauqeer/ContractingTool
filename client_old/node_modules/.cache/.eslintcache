[{"/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/index.js":"1","/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/Router.js":"2","/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/LandingPage.js":"3","/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/NotFound.js":"4","/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/httpClient.js":"5","/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/chatroom/AddRoom.js":"6","/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/chatroom/RoomMembers.js":"7","/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/chatroom/AddMember.js":"8","/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/chatroom/Chat.js":"9","/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/authentication/Login.js":"10","/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/authentication/Register.js":"11","/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/Header.js":"12","/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/Footer.js":"13"},{"size":228,"mtime":1639995964879,"results":"14","hashOfConfig":"15"},{"size":1300,"mtime":1640423878266,"results":"16","hashOfConfig":"15"},{"size":4276,"mtime":1640433937197,"results":"17","hashOfConfig":"15"},{"size":125,"mtime":1639996982849,"results":"18","hashOfConfig":"15"},{"size":87,"mtime":1640021078262,"results":"19","hashOfConfig":"15"},{"size":3780,"mtime":1640434149724,"results":"20","hashOfConfig":"15"},{"size":2916,"mtime":1640512805597,"results":"21","hashOfConfig":"15"},{"size":3810,"mtime":1640513017257,"results":"22","hashOfConfig":"15"},{"size":4997,"mtime":1640512725936,"results":"23","hashOfConfig":"15"},{"size":3918,"mtime":1640456820326,"results":"24","hashOfConfig":"15"},{"size":3541,"mtime":1640507153483,"results":"25","hashOfConfig":"15"},{"size":145,"mtime":1640423981491,"results":"26","hashOfConfig":"15"},{"size":96,"mtime":1640433958689,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"16whs7q",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/index.js",[],["58","59"],"/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/Router.js",[],"/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/LandingPage.js",["60","61","62"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport httpClient from \"../httpClient\";\n\nconst LandingPage = () => {\n  const [user, setUser] = useState({});\n  const [room, setRoom] = useState([]);\n  const [roomMember, setRoomMember] = useState([]);\n\n  const logoutUser = async () => {\n    await httpClient.post(\"//localhost:5000/logout\");\n    window.location.href = \"/\";\n  };\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const resp = await httpClient.get(\n          \"//localhost:5000/contract/api/get_user\"\n        );\n        setUser(resp.data);\n      } catch (error) {\n        console.log(\"Not authenticated\");\n      }\n    })();\n\n    (async () => {\n      try {\n        const res = await httpClient.get(\n          \"//localhost:5000/contract/api/get_rooms\"\n        );\n        // console.log(res.data.response);\n        setRoom(res.data.response);\n      } catch (error) {\n        console.log(\"No room is available\");\n      }\n    })();\n  }, []);\n\n  const deleteRoom = async (id) => {\n    if (id) {\n      try {\n        const resp = await httpClient.get(\n          `//localhost:5000/contract/api/delete_room/${id}`\n        );\n        window.location.reload(false);\n      } catch (error) {\n        console.log(\"No room available\");\n      }\n    }\n  };\n  return (\n    <div className=\"mt-2 mb-3\">\n      {user && (\n        <>\n          {Object.keys(user).length !== 0 ? (\n            <>\n              <h4 className=\"mb-3\">Logged in</h4>\n              <div className=\"row\">\n                <div className=\"col-sm-2\">\n                  <b>ID:</b>{\" \"}\n                </div>\n                <div className=\"col-sm-4\">{user.id}</div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-sm-2\">\n                  <b>Email:</b>\n                </div>\n                <div className=\"col-sm-4\">{user.email}</div>\n              </div>\n\n              <h5 className=\"mb-3\"> </h5>\n              <Link to=\"/addroom\">Add Room</Link>\n              <br />\n              {room.length == 0 && <p>No room is available</p>}\n              <table className=\"table table-striped w-75 border\">\n                <thead class=\"table-dark\">\n                  <tr>\n                    <th scope=\"col\">ID</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Members</th>\n                    <th scope=\"col\">Chat</th>\n                    <th scope=\"col\">Actions</th>\n                  </tr>\n                </thead>\n                {room && roomMember && (\n                  <>\n                    {room.map((x, index) => {\n                      return (\n                        <>\n                          <tr key={index}>\n                            <td>{x.id}</td>\n                            <td>{x.room_name}</td>\n                            <td>\n                              <Link to={`/roommembers/${x.id}`}>\n                                Member Detail\n                              </Link>\n                            </td>\n                            <td>\n                              <Link to={`/chat/${user.id}/${x.id}`}>Chat</Link>\n                            </td>\n                            <td>\n                              <button\n                                onClick={(e) => deleteRoom(x.id)}\n                                // className=\"btn btn-sm btn-danger\"\n                              >\n                                X\n                              </button>\n                            </td>\n                          </tr>\n                        </>\n                      );\n                    })}\n                  </>\n                )}\n              </table>\n\n              <br />\n              <button onClick={logoutUser} className=\"btn btn-danger\">\n                Logout\n              </button>\n            </>\n          ) : (\n            <>\n              <p>You are not logged in</p>\n              <button className=\"btn btn-primary\">\n                <Link to=\"/login\">Login</Link>\n              </button>\n              <button className=\"btn btn-primary\">\n                <Link to=\"/register\">Register</Link>\n              </button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default LandingPage;\n","/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/NotFound.js",[],"/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/httpClient.js",[],"/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/chatroom/AddRoom.js",["63","64","65","66","67","68","69"],"import React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport httpClient from \"../../httpClient\";\n\nconst AddRoom = () => {\n  const [roomName, setRoomName] = useState(\"\");\n  const [createdBy, setCreatedBy] = useState(\"\");\n  const [user, setUser] = useState({});\n  const [users, setUsers] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [memberSelection, setMemberSelection] = useState(false);\n  const [stateErrors, setStateErrors] = useState({\n    roomNameError: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const resp = await httpClient.get(\n          \"//localhost:5000/contract/api/get_user\"\n        );\n        setUser(resp.data);\n      } catch (error) {\n        console.log(\"Not authenticated\");\n      }\n    })();\n\n    (async () => {\n      try {\n        const resp = await httpClient.get(\n          \"//localhost:5000/contract/api/get_all_users\"\n        );\n        // console.log(resp.data.response);\n        setUsers(resp.data.response);\n      } catch (error) {\n        console.log(\"Not authenticated\");\n      }\n    })();\n    if (user) {\n      setCreatedBy(user.email);\n    }\n  }, []);\n\n  const validate = () => {\n    let roomNameError = \"\";\n\n    if (roomName === \"\") {\n      roomNameError = \"Room name is required.\";\n    }\n\n    if (roomNameError) {\n      setStateErrors({\n        roomNameError,\n      });\n      return false;\n    }\n    return true;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const isValid = validate();\n\n    if (isValid) {\n      let data = {\n        room_name: roomName,\n        created_by: user.id,\n      };\n\n      try {\n        await httpClient.post(\"//localhost:5000/contract/api/addroom\", data);\n\n        navigate(\"/\");\n      } catch (error) {\n        if (error.response.status === 401) {\n          alert(\"Record can't be inserted!\");\n        }\n      }\n    }\n  };\n  return (\n    <div>\n      <h3>Room Information</h3>\n\n      <form>\n        <div class=\"row col-sm-4\">\n          <label for=\"inputName\" class=\"col-sm-4 col-form-label\">\n            Room Name\n          </label>\n          <div class=\"col-sm-8\">\n            <input\n              name=\"roomName\"\n              type=\"text\"\n              className=\"form-control form-control-sm\"\n              value={roomName}\n              onChange={(e) => setRoomName(e.target.value)}\n            />\n          </div>\n        </div>\n        {stateErrors.roomNameError && (\n          <>\n            <div class=\"row col-sm-4\">\n              <label for=\"inputName\" class=\"col-sm-4 col-form-label\"></label>\n              <div class=\"col-sm-8\">\n                <span className=\"error\">\n                  {stateErrors.roomNameError && stateErrors.roomNameError}\n                </span>\n              </div>\n            </div>\n          </>\n        )}\n\n        <div class=\"row col-sm-4\">\n          <label for=\"inputCreateBy\" class=\"col-sm-4 col-form-label\">\n            Created By\n          </label>\n          <div class=\"col-sm-8\">\n            <input\n              name=\"createdBy\"\n              type=\"text\"\n              className=\"form-control form-control-sm\"\n              value={user && user.email}\n              onChange={(e) => setCreatedBy(e.target.value)}\n            />\n          </div>\n        </div>\n\n        <div class=\"row col-sm-4\">\n          <label for=\"inputCreateBy\" class=\"col-sm-4 col-form-label\"></label>\n          <div class=\"col-sm-8\">\n            <button className=\"btn btn-sm btn-success\" onClick={handleSubmit}>\n              Submit\n            </button>\n          </div>\n          <p>\n            <Link to={`/`}>Back to Room</Link>\n          </p>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default AddRoom;\n","/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/chatroom/RoomMembers.js",["70","71"],"/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/chatroom/AddMember.js",["72","73","74","75"],"/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/chatroom/Chat.js",["76","77","78","79","80","81"],"/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/authentication/Login.js",[],"/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/authentication/Register.js",["82"],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport httpClient from \"../../httpClient\";\nconst Register = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [stateErrors, setStateErrors] = useState({\n    emailError: \"\",\n    passwordError: \"\",\n  });\n  const navigate = useNavigate();\n\n  // validation\n  const validate = () => {\n    let emailError = \"\";\n    let passwordError = \"\";\n\n    if (email === \"\") {\n      emailError = \"Email is required.\";\n    }\n\n    if (password === \"\") {\n      passwordError = \"Password is required.\";\n    }\n\n    if (password && password.length < 4) {\n      passwordError = \"Password length should be greator or equal 4.\";\n    }\n\n    if (!email.includes(\"@\")) {\n      emailError = \"Invalid email\";\n    }\n\n    if (emailError || passwordError) {\n      setStateErrors({\n        emailError,\n        passwordError,\n      });\n      return false;\n    }\n    return true;\n  };\n\n  const handleLogin = () => {\n    navigate(\"/login\");\n  };\n\n  const handleSubmit = () => {\n    const isValid = validate();\n\n    if (isValid) {\n      const resp = httpClient.post(\"//localhost:5000/contract/api/register\", {\n        email,\n        password,\n      });\n      if (resp) {\n        navigate(\"/login\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"mb-3\">\n      <h3 className=\"mb-3\">Register</h3>\n      <form>\n        <div className=\"row col-sm-4\">\n          <label className=\"col-sm-3 col-form-label\">Email</label>\n          <div className=\"col-sm-8\">\n            <input\n              name=\"email\"\n              type=\"email\"\n              className=\"form-control form-control-sm\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n        </div>\n        {stateErrors.emailError && (\n          <>\n            <div className=\"row col-sm-4\">\n              <label className=\"col-sm-3 col-form-label\"></label>\n              <div class=\"col-sm-8\">\n                <span className=\"error\">\n                  {stateErrors.emailError && stateErrors.emailError}\n                </span>\n              </div>\n            </div>\n          </>\n        )}\n\n        <div className=\"row col-sm-4\">\n          <label className=\"col-sm-3 col-form-label\">Password</label>\n          <div className=\"col-sm-8\">\n            <input\n              name=\"password\"\n              type=\"password\"\n              className=\"form-control form-control-sm\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n        </div>\n\n        {stateErrors.passwordError && (\n          <>\n            <div className=\"row col-sm-4\">\n              <label className=\"col-sm-3 col-form-label\"></label>\n              <div className=\"col-sm-8\">\n                <span className=\"error\">\n                  {stateErrors.passwordError && stateErrors.passwordError}\n                </span>\n              </div>\n            </div>\n          </>\n        )}\n\n        <div className=\"row col-sm-4\">\n          <label className=\"col-sm-3 col-form-label\"></label>\n          <div className=\"col-sm-8\">\n            <button onClick={handleSubmit} className=\"btn btn-sm btn-success\">\n              Submit\n            </button>\n            <button onClick={handleLogin} className=\"btn btn-sm btn-primary\">\n              Signin\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n","/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/Header.js",[],"/home/amar/D/Projects/FlaskProject/ContractingTool/client/src/pages/Footer.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":8,"column":22,"nodeType":"89","messageId":"90","endLine":8,"endColumn":35},{"ruleId":"87","severity":1,"message":"91","line":43,"column":15,"nodeType":"89","messageId":"90","endLine":43,"endColumn":19},{"ruleId":"92","severity":1,"message":"93","line":76,"column":28,"nodeType":"94","messageId":"95","endLine":76,"endColumn":30},{"ruleId":"87","severity":1,"message":"96","line":7,"column":10,"nodeType":"89","messageId":"90","endLine":7,"endColumn":19},{"ruleId":"87","severity":1,"message":"97","line":9,"column":10,"nodeType":"89","messageId":"90","endLine":9,"endColumn":15},{"ruleId":"87","severity":1,"message":"98","line":10,"column":10,"nodeType":"89","messageId":"90","endLine":10,"endColumn":23},{"ruleId":"87","severity":1,"message":"99","line":10,"column":25,"nodeType":"89","messageId":"90","endLine":10,"endColumn":41},{"ruleId":"87","severity":1,"message":"100","line":11,"column":10,"nodeType":"89","messageId":"90","endLine":11,"endColumn":25},{"ruleId":"87","severity":1,"message":"101","line":11,"column":27,"nodeType":"89","messageId":"90","endLine":11,"endColumn":45},{"ruleId":"102","severity":1,"message":"103","line":44,"column":6,"nodeType":"104","endLine":44,"endColumn":8,"suggestions":"105"},{"ruleId":"102","severity":1,"message":"106","line":33,"column":6,"nodeType":"104","endLine":33,"endColumn":8,"suggestions":"107"},{"ruleId":"87","severity":1,"message":"91","line":38,"column":15,"nodeType":"89","messageId":"90","endLine":38,"endColumn":19},{"ruleId":"87","severity":1,"message":"108","line":6,"column":10,"nodeType":"89","messageId":"90","endLine":6,"endColumn":20},{"ruleId":"87","severity":1,"message":"109","line":6,"column":22,"nodeType":"89","messageId":"90","endLine":6,"endColumn":35},{"ruleId":"87","severity":1,"message":"110","line":8,"column":10,"nodeType":"89","messageId":"90","endLine":8,"endColumn":17},{"ruleId":"102","severity":1,"message":"103","line":44,"column":6,"nodeType":"104","endLine":44,"endColumn":8,"suggestions":"111"},{"ruleId":"87","severity":1,"message":"112","line":3,"column":16,"nodeType":"89","messageId":"90","endLine":3,"endColumn":27},{"ruleId":"87","severity":1,"message":"113","line":6,"column":10,"nodeType":"89","messageId":"90","endLine":6,"endColumn":20},{"ruleId":"87","severity":1,"message":"114","line":13,"column":10,"nodeType":"89","messageId":"90","endLine":13,"endColumn":15},{"ruleId":"87","severity":1,"message":"115","line":13,"column":17,"nodeType":"89","messageId":"90","endLine":13,"endColumn":25},{"ruleId":"102","severity":1,"message":"116","line":65,"column":6,"nodeType":"104","endLine":65,"endColumn":8,"suggestions":"117"},{"ruleId":"87","severity":1,"message":"118","line":95,"column":9,"nodeType":"89","messageId":"90","endLine":95,"endColumn":23},{"ruleId":"87","severity":1,"message":"119","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":13},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'setRoomMember' is assigned a value but never used.","Identifier","unusedVar","'resp' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'createdBy' is assigned a value but never used.","'users' is assigned a value but never used.","'selectedUsers' is assigned a value but never used.","'setSelectedUsers' is assigned a value but never used.","'memberSelection' is assigned a value but never used.","'setMemberSelection' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["122"],"React Hook useEffect has a missing dependency: 'param.id'. Either include it or remove the dependency array.",["123"],"'memberName' is assigned a value but never used.","'setMemberName' is assigned a value but never used.","'addedBy' is assigned a value but never used.",["124"],"'useNavigate' is defined but never used.","'Scrollbars' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getRoomMemberId' and 'params.roomid'. Either include them or remove the dependency array.",["125"],"'scrollToBottom' is assigned a value but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"126","fix":"130"},{"desc":"131","fix":"132"},"Update the dependencies array to be: [user]",{"range":"133","text":"134"},"Update the dependencies array to be: [param.id]",{"range":"135","text":"136"},{"range":"137","text":"134"},"Update the dependencies array to be: [getRoomMemberId, params.roomid]",{"range":"138","text":"139"},[1228,1230],"[user]",[930,932],"[param.id]",[1222,1224],[1875,1877],"[getRoomMemberId, params.roomid]"]